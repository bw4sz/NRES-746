{
    "collab_server" : "",
    "contents" : "---\ntitle: \"First Lecture\"\nauthor: \"NRES 746\"\ndate: \"August 23, 2016\"\noutput: \n  html_document: \n    theme: cerulean\n    toc: yes\n    toc_float: yes\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, cache = TRUE)\n```\n\n```{r include=FALSE}\nlibrary(dplyr)\nlibrary(tidyr)\n```\n\n\n## Algorithmic vs standard statistics: a brief demonstration\n\n### standard t test\n\nFirst, let's go through a very basic review.   \n\nHere is a made-up data set. Let's imagine we are interested in seeing if the average height of study organisms in Group A are different from those in Group B.  \n\n```{r}\n\ndata <- data.frame(\n  GroupA = c(175, 168, 168, 190, 156, 181, 182, 175, 174, 179),\n  GroupB = c(185, 169, 173, 173, 188, 186, 175, 174, 179, 180) \n)\n\nsummary(data)\n\nsample.size <- length(data$GroupA)\n\nreshape_data <- data.frame(\n  Group = rep(c(\"A\",\"B\"),each=sample.size),\n  Height = c(data$GroupA,data$GroupB)\n)\n\nplot(Height~Group, data=reshape_data)\n\nobserved_dif <- mean(data$GroupA) - mean(data$GroupB)\nobserved_dif\n\n```\n\nYou probably recognize the standard t-test below. For now, we are assuming that the samples come from normally distributed populations with equal variances. \n\n```{r}\nt.test(data$GroupA,data$GroupB, var.equal=TRUE, paired=FALSE)\n\n```\n\nBut let's imagine now that we didn't know about the t-test- but we still want to accomplish the same goal.  \n\nFirst, let's review the question and state the problem clearly:\n\nWe want to know if these two populations are different- specifically if the expected value (mean) differs. We have small random (but representative) samples from these two putative populations.  \n\nCan we build an **algorithm** to generate a p-value? \n\nLet's start by simulating a data population under the null hypothesis. \n\n```{r}\nlots <- 1000000  # large number approximating infinity in this example!\n\npopMean_null <- mean(reshape_data$Height)        # assume groups A and B come from a population with common mean \npopSD_null <- sd(reshape_data$Height)\npopData_null <- rnorm(n=lots,mean=popMean_null,sd=popSD_null)    # the statistical \"population\" of interest (under null model)\n\n```\n\nThen we can sample from that data population:\n\n```{r}\nsampleA <- sample(popData_null,size=sample.size)   \nsampleB <- sample(popData_null,size=sample.size)\n\nsampleA\ndifference <- mean(sampleA)-mean(sampleB)   # difference between sample means\n\n```\n\nThen we can generate a distribution of \"anomalies\" (differences between the group means) expected under the null hypothesis (there is fundamentally no difference between the two groups):\n\n```{r}\nreps <- 1000\nnull_difs <- numeric(reps)\n\nfor(i in 1:reps){\n  sampleA <- sample(popData_null,size=sample.size)   \n  sampleB <- sample(popData_null,size=sample.size)\n  null_difs[i] <- mean(sampleA)-mean(sampleB)\n}\n\nhist(null_difs)\nabline(v=observed_dif,col=\"green\",lwd=3)\n\n```\n\n\nNow, all we need to do is compare this more quantitatively with the observed among-group difference...\n\n```{r}\n  ordered_difs <- sort(abs(null_difs))   # first order the distribution of null results in terms of absolute magnitude of difference\n  higher_anomaly <- length(which(ordered_difs>=abs(observed_dif)))\n  p_value <- higher_anomaly/reps   # probability of getting a value with anomaly as or more extreme than observed, given null hypothesis is true...\n  p_value\n\n```\n\n\nNow, what about if we wanted to relax the assumptions -- allow for unequal sample sizes, or unequal variances, for example... \n\nor non-normal distributions?\n\nThe value of the algorithmic, brute-force approach to statistics is the flexibility! We have to be aware of assumptions in all of our analyses, but when we have some computational tools at hand, we can readily relax these assumptions. \n\n\n## Bootstrapping a confidence interval\n\n\n\n\n\n",
    "created" : 1471975581739.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "342557083",
    "id" : "CF07A9D4",
    "lastKnownWriteTime" : 1472082736,
    "last_content_update" : 1472082736574,
    "path" : "E:/GIT/NRES-746/LECTURE1.Rmd",
    "project_path" : "LECTURE1.Rmd",
    "properties" : {
        "last_setup_crc32" : "23218449bb338d19"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}